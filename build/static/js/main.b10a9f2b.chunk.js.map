{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","placeholder","EditFishForm","handleChange","console","log","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","_this$props$details","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.b10a9f2b.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getFunName } from '../helpers';\r\n\r\n/* All of our components are going to be classes\r\nOur class is extending the React component\r\nRender is the method that determines which DOM elements are output to the page */\r\nclass StorePicker extends React.Component {\r\n  myInput = React.createRef();\r\n\r\n  static propTypes = {\r\n    history: PropTypes.object,\r\n  };\r\n  // we are handling the form submission in JS on client-side, not on server-side\r\n\r\n  /* we declare a property on the component. The property can be bound to an instance. The arrow function \r\n  allows us to bind the value of \"this\" to the StorePicker component */\r\n  goToStore = event => {\r\n    // event.preventDefault() will stop the page from reloading on form submission\r\n    event.preventDefault();\r\n    // get the text from the input\r\n    const storeName = this.myInput.current.value;\r\n    // change the page route to /store/whatevertheuserentered\r\n    this.props.history.push(`/store/${storeName}`);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n        <h2>Please Enter a Store</h2>\r\n        <input\r\n          type=\"text\"\r\n          ref={this.myInput}\r\n          required\r\n          defaultValue={getFunName()}\r\n        />\r\n        <button type=\"submit\">Visit Store →</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n/* make it exportable to other files */\r\nexport default StorePicker;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// stateless functional component\r\n\r\nconst Header = props => (\r\n  <header className=\"top\">\r\n    <h1>\r\n      Catch\r\n      <span className=\"ofThe\">\r\n        <span className=\"of\">Of</span>\r\n        <span className=\"the\">The</span>\r\n      </span>\r\n      Day\r\n    </h1>\r\n    <h3 className=\"tagline\">\r\n      <span>{props.tagline}</span>\r\n    </h3>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  tagline: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { formatPrice } from '../helpers';\r\n\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    order: PropTypes.object,\r\n    removeFromOrder: PropTypes.func,\r\n  };\r\n\r\n  renderOrder = key => {\r\n    // grab the fish being looped over\r\n    const fish = this.props.fishes[key];\r\n    // count the number of orders of each fish\r\n    const count = this.props.order[key];\r\n    const isAvailable = fish && fish.status === 'available';\r\n    const transitionOptions = {\r\n      classNames: 'order',\r\n      key,\r\n      timeout: { enter: 500, exit: 500 },\r\n    };\r\n    // make sure the fish is loaded before we continue\r\n    if (!fish) return null;\r\n    if (!isAvailable) {\r\n      return (\r\n        <li key={key}>\r\n          Sorry {fish ? fish.name : 'fish'} is no longer available.\r\n        </li>\r\n      );\r\n    }\r\n    return (\r\n      <CSSTransition {...transitionOptions}>\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition\r\n                classNames=\"count\"\r\n                key={count}\r\n                timeout={{ enter: 500, exit: 500 }}\r\n              >\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            lbs {fish.name}\r\n            {formatPrice(count * fish.price)}\r\n            <button onClick={() => this.props.removeFromOrder(key)}>\r\n              &times;\r\n            </button>\r\n          </span>\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    // reduce takes in data and returns a tally\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      // grab the fish being looped over\r\n      const fish = this.props.fishes[key];\r\n      // count the number of orders of each fish\r\n      const count = this.props.order[key];\r\n      // check if there is a fish and if it is available\r\n      const isAvailable = fish && fish.status === 'available';\r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h1>Order</h1>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        <div className=\"total\">Total:{formatPrice(total)}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n  nameRef = React.createRef();\r\n\r\n  priceRef = React.createRef();\r\n\r\n  statusRef = React.createRef();\r\n\r\n  descRef = React.createRef();\r\n\r\n  imageRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    addFish: PropTypes.func,\r\n  };\r\n\r\n  // pass the event to stop the form from submitting\r\n  createFish = event => {\r\n    // stop the form from submitting\r\n    event.preventDefault();\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value),\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value,\r\n    };\r\n    this.props.addFish(fish);\r\n    // refresh the form\r\n    event.currentTarget.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n        <input\r\n          name=\"price\"\r\n          ref={this.priceRef}\r\n          type=\"text\"\r\n          placeholder=\"Price\"\r\n        />\r\n        <select name=\"status\" ref={this.statusRef}>\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\r\n        <input\r\n          name=\"image\"\r\n          ref={this.imageRef}\r\n          type=\"text\"\r\n          placeholder=\"Image\"\r\n        />\r\n        <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFishForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass EditFishForm extends React.Component {\r\n  static propTypes = {\r\n    fish: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number,\r\n    }),\r\n    index: PropTypes.string,\r\n    updateFish: PropTypes.func,\r\n  };\r\n\r\n  handleChange = event => {\r\n    console.log(event.currentTarget.name);\r\n    // update the fish\r\n    // 1. Take copy of current fish\r\n    const updatedFish = {\r\n      ...this.props.fish,\r\n      [event.currentTarget.name]:\r\n        event.currentTarget.name === 'price'\r\n          ? parseFloat(event.currentTarget.value)\r\n          : event.currentTarget.value,\r\n    };\r\n    this.props.updateFish(this.props.index, updatedFish);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"price\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.price}\r\n        />\r\n        <select\r\n          type=\"text\"\r\n          name=\"status\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.status}\r\n        >\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea\r\n          name=\"desc\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.desc}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.image}\r\n        />\r\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\r\n          Remove Fish\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFishForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = props => (\r\n  <nav className=\"login\">\r\n    <h2>Inventory Login</h2>\r\n    <p>Sign in to manage your store's inventory.</p>\r\n    <button className=\"github\" onClick={() => props.authenticate('Github')}>\r\n      Log In with GitHub\r\n    </button>\r\n    <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>\r\n      Log In with Facebook\r\n    </button>\r\n  </nav>\r\n);\r\n\r\nLogin.propTypes = {\r\n  authenticate: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Login;\r\n","import Rebase from 're-base'; // allows us to mirror our state to our Firebase changes\r\nimport firebase from 'firebase';\r\n\r\n// configure Firebase\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: 'AIzaSyDHzD3zaPWM6mjLZH3RNdJjCw8Ej5qiN1A',\r\n  authDomain: 'catchofthedayjenna.firebaseapp.com',\r\n  databaseURL: 'https://catchofthedayjenna.firebaseio.com',\r\n});\r\n\r\n// create our rebase bindings\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\n// named export\r\nexport { firebaseApp };\r\n\r\n// default export\r\nexport default base;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport Login from './Login';\r\nimport base, { firebaseApp } from '../base';\r\n\r\nclass Inventory extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func,\r\n    addFish: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    uid: null,\r\n    owner: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.authHandler({ user });\r\n      }\r\n    });\r\n  }\r\n\r\n  authHandler = async authData => {\r\n    // 1. Look up the current store in the firebase db\r\n    const store = await base.fetch(this.props.storeId, { context: this });\r\n    // 2. Claim it if there is no owner\r\n    if (!store.owner) {\r\n      // save it as our own\r\n      await base.post(`${this.props.storeId}/owner`, {\r\n        data: authData.user.uid,\r\n      });\r\n    }\r\n    // 3. Set the state of the inventory component to reflect the current user\r\n    this.setState({\r\n      uid: authData.user.uid,\r\n      owner: store.owner || authData.user.uid,\r\n    });\r\n  };\r\n\r\n  authenticate = provider => {\r\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n    firebaseApp\r\n      .auth()\r\n      .signInWithPopup(authProvider)\r\n      .then(this.authHandler);\r\n  };\r\n\r\n  logout = async () => {\r\n    console.log('Logging out...');\r\n    await firebase.auth().signOut();\r\n    this.setState({ uid: null });\r\n  };\r\n\r\n  render() {\r\n    const logout = <button onClick={this.logout}>Log Out!</button>;\r\n    // 1. Check if the user is logged in\r\n    if (!this.state.uid) {\r\n      return <Login authenticate={this.authenticate} />;\r\n    }\r\n    // 2. Check if they are not the owner of the store\r\n    if (this.state.uid !== this.state.owner) {\r\n      return (\r\n        <div>\r\n          <p>Sorry, you are not the owner!</p>\r\n          {logout}\r\n        </div>\r\n      );\r\n    }\r\n    // 3. They are the owner, so render the inventory\r\n    return (\r\n      <div className=\"Inventory\">\r\n        <h1>Inventory</h1>\r\n        {logout}\r\n        {Object.keys(this.props.fishes).map(key => (\r\n          <EditFishForm\r\n            key={key}\r\n            index={key}\r\n            fish={this.props.fishes[key]}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\n\r\nclass Fish extends React.Component {\r\n  static propTypes = {\r\n    details: PropTypes.shape({\r\n      image: PropTypes.string,\r\n      name: PropTypes.string,\r\n      desc: PropTypes.string,\r\n      status: PropTypes.string,\r\n      price: PropTypes.number,\r\n    }),\r\n    addToOrder: PropTypes.func,\r\n    index: PropTypes.string,\r\n  };\r\n\r\n  render() {\r\n    const { image, name, price, desc, status } = this.props.details;\r\n    const isAvailable = status === 'available';\r\n    return (\r\n      <li className=\"menu-fish\">\r\n        <img src={image} alt={name} />\r\n        <h3 className=\"fish-name\">\r\n          {name}\r\n          <span className=\"price\">{formatPrice(price)}</span>\r\n        </h3>\r\n        <p>{desc}</p>\r\n        <button\r\n          type=\"button\"\r\n          disabled={!isAvailable}\r\n          onClick={() => this.props.addToOrder(this.props.index)}\r\n        >\r\n          {isAvailable ? 'Add to Order' : 'Sold Out'}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fish;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\nimport base from '../base';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    // describe the pieces of state that you will be using\r\n    // create empty state\r\n    fishes: {},\r\n    order: {},\r\n  };\r\n\r\n  static propTypes = {\r\n    match: PropTypes.object,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    // first reinstate our localStorage\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n    if (localStorageRef) {\r\n      this.setState({ order: JSON.parse(localStorageRef) });\r\n    }\r\n\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: 'fishes',\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(this.state.order);\r\n    localStorage.setItem(\r\n      this.props.match.params.storeId,\r\n      JSON.stringify(this.state.order)\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  addFish = fish => {\r\n    // take a copy of the existing state\r\n    const fishes = { ...this.state.fishes };\r\n    // add the new fish to the fishes variable\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    // set the new fishes object to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  updateFish = (key, updatedFish) => {\r\n    // 1. Take a copy of the current state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Update that state\r\n    fishes[key] = updatedFish;\r\n    // 3. Set that to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  deleteFish = key => {\r\n    // 1. take a copy of state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. update the state\r\n    fishes[key] = null;\r\n    // 3.  update state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({ fishes: sampleFishes });\r\n  };\r\n\r\n  addToOrder = key => {\r\n    // 1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Either add to the order, or update the number in our order\r\n    order[key] = order[key] + 1 || 1;\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order });\r\n  };\r\n\r\n  removeFromOrder = key => {\r\n    // 1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. remove that itemf from order\r\n    delete order[key];\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map(key => (\r\n              <Fish\r\n                key={key}\r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order\r\n          fishes={this.state.fishes}\r\n          order={this.state.order}\r\n          removeFromOrder={this.removeFromOrder}\r\n        />\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          updateFish={this.updateFish}\r\n          deleteFish={this.deleteFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          fishes={this.state.fishes}\r\n          storeId={this.props.match.params.storeId}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <h2>Not Found</h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport StorePicker from \"./StorePicker\";\r\nimport App from \"./App\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={StorePicker} />\r\n      <Route path=\"/store/:storeId\" component={App} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","// we need the whole package\r\nimport React from \"react\";\r\n// we only need the render method from this package\r\nimport { render } from \"react-dom\";\r\n//StorePicker & App are not used anymore because they are going to be indirectly used inside of Router.js\r\n// import StorePicker from \"./components/StorePicker\";\r\n// import App from \"./components/App\";\r\nimport Router from \"./components/Router\";\r\nimport \"./css/style.css\";\r\n\r\n/* you can mount your React app to the page using the render method. \r\nThe render method takes jsx and the mounting point.\r\nMounting is the only time you will actually need to access the DOM.\r\nYou can render a component out to the DOM */\r\n\r\nrender(<Router />, document.querySelector(\"#main\"));\r\n"],"sourceRoot":""}